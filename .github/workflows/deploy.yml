name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Install dependencies
        run: npm ci

      - name: Clean and prepare build
        run: |
          echo "Cleaning previous builds and checking config files..."
          rm -rf .next out
          # Remove any duplicate next.config.js if it exists (we only want next.config.mjs)
          if [ -f "next.config.js" ]; then
            echo "Removing duplicate next.config.js file"
            rm next.config.js
          fi
          echo "Config files present:"
          ls -la next.config.*
          echo "Build environment prepared"

      - name: Build with Next.js
        run: |
          export NEXT_PUBLIC_BUILD_TIME=$(TZ='Asia/Shanghai' date '+%m月%d日 %H:%M')
          echo "Starting Next.js build..."
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Next.js version: $(npx next --version)"
          npm run build
          echo "Build completed successfully"

      - name: Verify build output
        run: |
          echo "Verifying build output..."
          if [ -d "./out" ]; then
            echo "✅ Static export successful"
            echo "Files in out directory:"
            ls -la ./out
            echo "Total size: $(du -sh ./out | cut -f1)"
          else
            echo "❌ Build failed - no output directory found"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
